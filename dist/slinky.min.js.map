{"version":3,"sources":["slinky.js"],"names":["Slinky","element","options","arguments","length","undefined","_classCallCheck","this","resize","speed","theme","_init","title","home","menu","jQuery","base","children","first","settings","addClass","_transition","prev","wrapInner","prepend","header","label","find","clone","html","removeClass","append","each","index","back","back_label","parent","is","text","$","prop","href","class","_addListeners","_jumpToInitial","e","_this","_clicked","Date","now","currentTarget","link","attr","indexOf","hasClass","preventDefault","next","show","_move","_resize","hide","parentsUntil","active","jump","setTimeout","height","outerHeight","depth","callback","left","Math","round","parseInt","get","style","css","content","trigger","target","animate","to","count","menus","parents","not","_this2","remove","off","transition-duration","contents","unwrap","split","forEach","field","fn","slinky"],"mappings":"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","file":"slinky.min.js","sourcesContent":["/*\n * Slinky\n * Rather sweetmenus\n * @author Ali Zahid <ali.zahid@live.com>\n * @license MIT\n */\n\nclass Slinky {\n  // default options\n  get options() {\n    return {\n      resize: true,\n      speed: 300,\n      theme: 'slinky-theme-default',\n      title: false,\n      back_title: false,\n      home: 'Home'\n    }\n  }\n\n  constructor(element, options = {}) {\n    // save settings\n    this.settings = {\n      ...this.options,\n      ...options\n    }\n\n    // let's go!\n    this._init(element)\n  }\n\n  // setup the DOM just for us\n  _init(element) {\n    // the two elements of water and moisture\n    this.menu = jQuery(element)\n    this.base = this.menu.children().first()\n\n    const { base, menu, settings } = this\n\n    // set theme\n    menu.addClass('slinky-menu').addClass(settings.theme)\n\n    // set transition speed\n    this._transition(settings.speed)\n\n    // add arrows to links with children\n    jQuery('a + ul', menu)\n      .prev()\n      .addClass('next')\n\n    // wrap link text with <span>\n    // mostly for styling\n    jQuery('li > a', menu).wrapInner('<span>')\n\n    // create header item\n    const header = jQuery('<li>').addClass('header')\n\n    // prepend it to the list\n    jQuery('li > ul', menu).prepend(header)\n\n    // do we need to add titles?\n    if(settings.title) {\n      // loop through each child list\n      jQuery('li > ul', menu).each((index, element) => {\n        // get the label from the parent link\n        const label = jQuery(element)\n          .parent()\n          .find('a')\n          .first()\n          .clone()\n\n        // if it's not empty, create the title\n        if(label) {\n          const title = jQuery('<header>')\n            .addClass('title')\n            .html(label.removeClass('next'))\n\n          // append it to the immediate header\n          if(jQuery('> .header a', element).length){\n              jQuery('> .header a', element).append(title)\n          }else {\n              jQuery('>.header', element).append(title)\n          }\n        }\n      })\n    }\n\n    // create back buttons\n    const back = jQuery('<li>').addClass('back-item')\n    jQuery('li > ul', menu).prepend(back);\n\n    if(settings.back_title) {\n      // loop through each child list\n      jQuery('li > ul', menu).each((index, element) => {\n          // get the label from the parent link\n          let back_label = '';\n          if(jQuery(element).parent().parent().is('.slinky-menu > ul')) {\n            back_label = settings.home;\n          } else {\n            back_label = jQuery(element)\n              .parent()\n              .parent()\n              .find('.header')\n              .first()\n              .text()\n          }\n\n          jQuery('> .back-item', element).append($('<a>').prop({'href': '#', 'class': 'back'}).append(back_label))\n      })\n  }\n\n  // add click listeners\n  this._addListeners()\n\n  // jump to initial active\n  this._jumpToInitial()\n}\n\n// click listeners\n_addListeners() {\n    const { menu, settings } = this\n\n  jQuery('a', menu).on('click', e => {\n    // prevent broken/half transitions\n    if(this._clicked + settings.speed > Date.now()) {\n      return false\n    }\n\n    // cache click time to check on next click\n    this._clicked = Date.now()\n\n    // get the link\n    const link = jQuery(e.currentTarget)\n\n    // prevent default if it's a hash\n    // or a Slinky button\n    if(\n      link.attr('href').indexOf('#') === 0 ||\n      link.hasClass('next') ||\n      link.hasClass('back')\n    ) {\n      e.preventDefault()\n    }\n\n    // time to move\n    if(link.hasClass('next')) {\n      // one step forward\n\n      // remove the current active\n      menu.find('.active').removeClass('active')\n\n      // set the new active\n      link\n        .next()\n        .show()\n        .addClass('active')\n\n      // make the chess move\n      this._move(1)\n\n      // resize the menu if need be\n      if(settings.resize) {\n        this._resize(link.next())\n      }\n    } else if(link.hasClass('back')) {\n      // and two steps back\n      // just one step back, actually\n\n      // make the move\n      this._move(-1, () => {\n        // remove the current active\n        menu.find('.active').removeClass('active')\n\n        // set the new active\n        link\n          .parent()\n          .parent()\n          .hide()\n          .parentsUntil(menu, 'ul')\n          .first()\n          .addClass('active')\n      })\n\n      // resize the menu if need be\n      if(settings.resize) {\n        this._resize(\n          link\n          .parent()\n          .parent()\n          .parentsUntil(menu, 'ul')\n        )\n      }\n    }\n  })\n}\n\n// jump to initial active on init\n_jumpToInitial() {\n    const { menu, settings } = this\n\n  // get initial active\n  const active = menu.find('.active')\n\n  if(active.length > 0) {\n    // remove initial active\n    active.removeClass('active')\n\n    // jump without animation\n    this.jump(active, false)\n  }\n\n  // set initial height on the menu\n  // to fix the first transition resize bug\n  setTimeout(() => menu.height(menu.outerHeight()), settings.speed)\n}\n\n// slide the menu\n_move(depth = 0, callback = () => {}) {\n  // don't bother packing if we're not going anywhere\n  if(depth === 0) {\n    return\n  }\n\n    const { settings, base } = this\n\n  // get current position from the left\n  const left = Math.round(parseInt(base.get(0).style.left)) || 0\n\n  // set the new position from the left\n  base.css('left', `${left - depth * 100}%`)\n\n  // callback after the animation\n  if(typeof callback === 'function') {\n    setTimeout(callback, settings.speed)\n  }\n}\n\n// resize the menu\n// to match content height\n_resize(content) {\n    const { menu } = this\n\n  menu.height(content.outerHeight())\n  menu.trigger('slinky-resize', {height:content.outerHeight()});\n}\n\n// set the transition speed\n_transition(speed = 300) {\n    const { menu, base } = this\n\n  menu.css('transition-duration', `${speed}ms`)\n  base.css('transition-duration', `${speed}ms`)\n}\n\n// jump to an element\njump(target, animate = true) {\n  if(!target) {\n    return\n  }\n\n    const { menu, settings } = this\n\n  const to = jQuery(target)\n\n  // get all current active\n  const active = menu.find('.active')\n\n  // how many moves must we jump?\n  let count = 0\n\n  // this many\n  // until we reach the parent list\n  if(active.length > 0) {\n    count = active.parentsUntil(menu, 'ul').length\n  }\n\n  // remove current active\n  // hide all lists\n  menu\n    .find('ul')\n    .removeClass('active')\n    .hide()\n\n  // get parent list\n  const menus = to.parentsUntil(menu, 'ul')\n\n  // show parent list\n  menus.show()\n\n  //\n  to.show().addClass('active')\n\n  // set transition speed to 0 if no animation\n  if(!animate) {\n    this._transition(0)\n  }\n\n  // make the checkers move\n  this._move(menus.length - count)\n\n  // resize menu if need be\n  if(settings.resize) {\n    this._resize(to)\n  }\n\n  // set transition speed to default after transition\n  if(!animate) {\n    this._transition(settings.speed)\n  }\n}\n\n// go big or go home\n// just go home\nhome(animate = true) {\n    const { base, menu, settings } = this\n\n  // set transition speed to 0 if no animation\n  if(!animate) {\n    this._transition(0)\n  }\n\n  // get current active\n  const active = menu.find('.active')\n\n  // get all parent lists\n  const parents = active.parentsUntil(menu, 'ul')\n\n  // make the move\n  this._move(-parents.length, () => {\n    // remove the current active\n    active.removeClass('active').hide()\n\n    // hide all parents except base\n    parents.not(base).hide()\n  })\n\n  // resize if need be\n  if(settings.resize) {\n    this._resize(base)\n  }\n\n  // set transition speed back to default\n  if(animate === false) {\n    this._transition(settings.speed)\n  }\n}\n\n// crush, kill, destroy\ndestroy() {\n    const { base, menu } = this\n\n  // remove all headers\n  jQuery('.header', menu).remove()\n\n  // remove Slinky links\n  // and click listeners\n  jQuery('a', menu)\n    .removeClass('next')\n    .off('click')\n\n  // remove inline styles\n  menu.css({\n    height: '',\n    'transition-duration': ''\n  })\n\n  base.css({\n    left: '',\n    'transition-duration': ''\n  })\n\n  // remove Slinky HTML\n  jQuery('li > a > span', menu)\n    .contents()\n    .unwrap()\n\n  // remove any current active\n  menu.find('.active').removeClass('active')\n\n  // remove any Slinky style classes\n  const styles = menu.attr('class').split(' ')\n\n  styles.forEach(style => {\n    if(style.indexOf('slinky') === 0) {\n      menu.removeClass(style)\n    }\n  })\n\n  // reset fields\n  const fields = ['settings', 'menu', 'base']\n\n  fields.forEach(field => delete this[field])\n}\n}\n\n// jQuery plugin\n;($ => {\n  $.fn.slinky = function(options) {\n    const menu = new Slinky(this, options)\n\n    return menu\n  }\n})(jQuery)\n"]}